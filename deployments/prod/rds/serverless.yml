org: nodrama
app: spread

service: spread-rds

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  region:
    prod: us-east-2
  instance:
    prod: db.t2.micro
  storage:
    prod: 20
  storageType:
    # magnetic (gp2 is ssd)
    prod: standard
  deletionProtection:
    prod: true
  # NOTE: If you want to restore your instance using a DB snapshot uncomment this
  # snapshot:
  #   prod: <arn-of-the-snapshot>
  availabilityZone:
    prod: us-east-2a

provider:
  name: aws
  profile: spread
  region: ${self:custom.region.${self:custom.stage}, self.region.dev}
  stage: dev
  deploymentBucket: spread-${self:custom.stage}-serverlessdeploymentbucket

resources:
  Resources:

    RDSSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: RDS Subnet Group
        SubnetIds:
          - {'Fn::ImportValue': '${self:custom.stage}-private-subnet1-id'}
          - {'Fn::ImportValue': '${self:custom.stage}-private-subnet2-id'}

    RDSInstance:
      Type: AWS::RDS::DBInstance
      Properties:
        DeletionProtection: ${self:custom.deletionProtection.${self:custom.stage}, self.deletionProtection.dev}
        DBInstanceIdentifier: ${self:custom.stage}-rds
        DBInstanceClass: ${self:custom.instance.${self:custom.stage}, self.instance.dev}
        AllocatedStorage: ${self:custom.storage.${self:custom.stage}, self.storage.dev}
        StorageType: ${self:custom.storageType.${self:custom.stage}, self.storageType.dev}
        AvailabilityZone: ${self:custom.availabilityZone.${self:custom.stage}, self.availabilityZone.dev}
        DBSubnetGroupName:
          Ref: RDSSubnetGroup
        Engine: mysql
        EngineVersion: 8.0.25
        AutoMinorVersionUpgrade: true
        MasterUsername: ${env:DB_USER}
        MasterUserPassword: ${env:DB_PASSWORD}
        PubliclyAccessible: false
        BackupRetentionPeriod: 14 #days
        VPCSecurityGroups:
          - {'Fn::ImportValue': '${self:custom.stage}-rds-security-group-id'}
        # NOTE: If you want to restore your instance using a DB snapshot uncomment this
        # DBSnapshotIdentifier: ${self:custom.snapshot.${self:custom.stage}, self.snapshot.dev}
